{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useScrollPosition = () => {\n  _s();\n\n  const [scrollPosition, setScrollPosition] = useState(0);\n  useEffect(() => {\n    const updatePosition = () => {\n      setScrollPosition(window.pageYOffset);\n    };\n\n    window.addEventListener(\"scroll\", updatePosition);\n    updatePosition();\n    return () => window.removeEventListener(\"scroll\", updatePosition);\n  }, []);\n  return scrollPosition;\n};\n\n_s(useScrollPosition, \"Q2iK3kJoTBUHGJF6VgTmVb/ctE4=\");\n\nexport default useScrollPosition;","map":{"version":3,"names":["useState","useEffect","useScrollPosition","scrollPosition","setScrollPosition","updatePosition","window","pageYOffset","addEventListener","removeEventListener"],"sources":["/Users/whhroo/Programming/react-lusso/src/hooks/useScrollPosition.jsx"],"sourcesContent":["import {useState, useEffect} from 'react';\n\nconst useScrollPosition = () => {\n    const [scrollPosition, setScrollPosition] = useState(0);\n  \n    useEffect(() => {\n      const updatePosition = () => {\n        setScrollPosition(window.pageYOffset);\n      }\n      window.addEventListener(\"scroll\", updatePosition);\n      updatePosition();\n      return () => window.removeEventListener(\"scroll\", updatePosition);\n    }, []);\n  \n    return scrollPosition;\n  };\n  \nexport default useScrollPosition;"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,CAAD,CAApD;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMI,cAAc,GAAG,MAAM;MAC3BD,iBAAiB,CAACE,MAAM,CAACC,WAAR,CAAjB;IACD,CAFD;;IAGAD,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,cAAlC;IACAA,cAAc;IACd,OAAO,MAAMC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,cAArC,CAAb;EACD,CAPQ,EAON,EAPM,CAAT;EASA,OAAOF,cAAP;AACD,CAbH;;GAAMD,iB;;AAeN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}